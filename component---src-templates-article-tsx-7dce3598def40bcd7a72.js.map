{"version":3,"sources":["webpack:///./src/templates/article.tsx","webpack:///./src/styles/colors.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/styles/index.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/layouts/Header.tsx","webpack:///./src/layouts/Footer.tsx","webpack:///./src/layouts/Main.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","_layouts_Main__WEBPACK_IMPORTED_MODULE_1__","date_fns__WEBPACK_IMPORTED_MODULE_2__","_styles__WEBPACK_IMPORTED_MODULE_3__","Article","_ref","post","data","markdownRemark","style","fontFamily","frontmatter","title","color","colors","lightGreen","marginTop","format","date","dangerouslySetInnerHTML","__html","html","white","grayWhite","gray","blueGray","darkBlueGray","black","green","darkGreen","salmon","m","module","exports","require","default","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","mainHeaderLinkClassName","cxs","letterSpacing","margin","@media screen and (max-width: 40em)","fontSize","@media screen and (max-width: 20em)","headerLinkClassName","HeaderLink","to","main","react","col_default","border","borderRadius","padding","gatsby_browser_entry","headerClassName","height","position","top","left","right","background","zIndex","boxShadow","Header","row_default","type","align","className","span","Header_HeaderLink","justify","gutter","footerClassName","textClassName","textAlign","Footer","mainClassName","mainContentClassName","maxWidth","width","Main","layouts_Header","layouts_Footer"],"mappings":"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","file":"component---src-templates-article-tsx-7dce3598def40bcd7a72.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport Main from '../layouts/Main'\nimport { format } from 'date-fns'\nimport { colors } from '../styles'\n\ninterface ArticleProps {\n  data: {\n    markdownRemark: {\n      html: string,\n      frontmatter: {\n        title: string\n        date: string\n      }\n    }\n  }\n}\n\nconst Article: React.SFC<ArticleProps> = ({\n  data: { markdownRemark: post }\n}) => (\n    <Main>\n      <h1 style={{ fontFamily: 'Cormorant Garamond' }}>{post.frontmatter.title}</h1>\n      <h3 style={{ color: colors.lightGreen, marginTop: 0 }}>{format(post.frontmatter.date, 'dddd, MMMM Do YYYY')}</h3>\n      <div\n        style={{\n          marginTop: 64\n        }}\n        dangerouslySetInnerHTML={{ __html: post.html }}\n      />\n    </Main>\n  )\n\nexport default Article\n\nexport const pageQuery = graphql`\n  query ArticleByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        date\n      }\n    }\n  }\n`\n","// colors inspired from https://coolors.co/f9f9f9-898da0-5d637d-4d5267-0a0908\nexport default {\n  white: '#FFFFFF',\n  grayWhite: '#F9F9F9',\n  gray: '#b0b3c5',\n  blueGray: '#5D637D',\n  darkBlueGray: '#4D5267',\n  black: '#152717',\n  lightGreen: '#b3c3b4',\n  green: '#519657',\n  darkGreen: '#38693c',\n  salmon: '#d86131'\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","export { default as colors } from \"./colors\";\nexport { default as typography } from \"./typography\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react'\nimport { Link } from 'gatsby'\nimport { Row, Col } from 'antd'\nimport { colors } from '../styles'\nimport cxs from 'cxs'\n\ninterface HeaderLinkProps {\n  to: string\n  main?: boolean\n}\nconst mainHeaderLinkClassName = cxs({\n  letterSpacing: 2,\n  margin: 0,\n  '@media screen and (max-width: 40em)': {\n    fontSize: '16px'\n  },\n  '@media screen and (max-width: 20em)': {\n    fontSize: '14px'\n  }\n})\nconst headerLinkClassName = cxs({\n  letterSpacing: 2,\n  margin: 0,\n  '@media screen and (max-width: 40em)': {\n    fontSize: '12px'\n  },\n  '@media screen and (max-width: 20em)': {\n    fontSize: '10px'\n  }\n})\n\nconst HeaderLink: React.SFC<HeaderLinkProps> = ({ to, main, children }) => (\n  <Col style={{\n    border: main ? 'unset' : `solid 1px ${colors.black}`,\n    borderRadius: main ? 'unset' : 4,\n    padding: main ? 'inherit' : '4px 10px'\n  }}><Link to={to}>{children}</Link></Col>\n)\n\nconst headerClassName = cxs({\n  height: '4rem',\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  right: 0,\n  background: colors.white,\n  zIndex: 999,\n  boxShadow: '0 1px 3px rgba(0,0,0,0.05)',\n  padding: '16px'\n})\n\nconst Header: React.SFC = () => (\n  <Row type='flex' align='middle' className={headerClassName}>\n    <Col span={8}>\n      <HeaderLink to='/' main>\n        <h2 className={mainHeaderLinkClassName}>Keith Alpichi</h2>\n      </HeaderLink>\n    </Col>\n    <Col span={16}>\n      <Row type='flex' justify='end' gutter={16}>\n        <HeaderLink to='/about'>\n          <h3 className={headerLinkClassName}>About</h3>\n        </HeaderLink>\n        {/* <HeaderLink to=\"/blog\">\n          <h3 className={headerLinkClassName}>Articles</h3>\n        </HeaderLink>\n        <HeaderLink to=\"/projects\">\n          <h3 style={{ margin: 0 }}>Projects</h3>\n        </HeaderLink> */}\n      </Row>\n    </Col>\n  </Row>\n)\n\nexport default Header\n","import * as React from \"react\";\nimport { Row, Col } from \"antd\";\nimport cxs from \"cxs\";\n\nconst footerClassName = cxs({\n  height: \"4rem\",\n  boxShadow: \"0 -1px 3px rgba(0,0,0,0.05)\",\n})\n\nconst textClassName = cxs({\n  textAlign: \"center\"\n})\n\nconst Footer: React.SFC = () => (\n  <Row type=\"flex\" align=\"middle\" justify=\"center\" className={footerClassName}>\n    <Col span={24}><p className={textClassName}>Built by Keith Alpichi 🤙</p></Col>\n  </Row>\n);\n\nexport default Footer;","import * as React from 'react'\nimport { Row, Col } from 'antd'\nimport Header from './Header'\nimport Footer from './Footer'\nimport cxs from 'cxs'\n\nimport '../styles/base.less'\n\nconst mainClassName = cxs({\n  top: '4rem',\n  margin: '4rem 0'\n})\n\nconst mainContentClassName = cxs({\n  maxWidth: '80%',\n  width: '800px'\n})\n\nconst Main: React.SFC = ({ children }) => (\n  <Row>\n    <Col span={24}>\n      <Header />\n    </Col>\n    <Col span={24} className={mainClassName}>\n      <Row type='flex' justify='center'>\n        <Col className={mainContentClassName}>\n          {children}\n        </Col>\n      </Row>\n    </Col>\n    <Col span={24}>\n      <Footer />\n    </Col>\n  </Row>\n)\n\nexport default Main\n"],"sourceRoot":""}