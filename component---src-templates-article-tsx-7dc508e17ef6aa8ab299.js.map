{"version":3,"sources":["webpack:///./src/templates/article.tsx"],"names":["React","_interopRequireWildcard","__webpack_require__","_dateFns","_styles","_components","_router","TagButtons","_ref","tags","createElement","FlexContainer","direction","map","t","TagButton","onClick","navigate","active","_ref2","post","data","markdownRemark","Fragment","style","lineHeight","frontmatter","title","color","colors","lightGreen","marginTop","format","date","dangerouslySetInnerHTML","__html","html"],"mappings":"8LAAA,IAAAA,EAAAC,EAAAC,EAAA,IAEAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,IACAI,EAAAJ,EAAA,IAeMK,EAA4C,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChDT,EAAAU,cAACL,EAAAM,cAAD,CAAeC,UAAU,OACtBH,EAAKI,IAAI,SAAAC,GAAC,OAAId,EAAAU,cAACL,EAAAU,UAAD,CAAWC,QAAS,kBAAM,EAAAV,EAAAW,UAAA,SAAkBH,IAAMI,QAAM,GAAEJ,SAIpC,SAAAK,GAAA,IACfC,EADeD,EACvCE,KAAQC,eAD+B,OAGrCtB,EAAAU,cAACV,EAAMuB,SAAP,KACEvB,EAAAU,cAAA,MAAIc,MAAO,CAAEC,WAAY,IAAML,EAAKM,YAAYC,OAChD3B,EAAAU,cAAA,MAAIc,MAAO,CAAEI,MAAOC,SAAOC,WAAYC,UAAW,KAAM,EAAA5B,EAAA6B,QAAOZ,EAAKM,YAAYO,KAAM,uBACtFjC,EAAAU,cAACH,EAAD,CAAYE,KAAMW,EAAKM,YAAYjB,OACnCT,EAAAU,cAAA,OACEc,MAAO,CACLO,UAAW,IAEbG,wBAAyB,CAAEC,OAAQf,EAAKgB,QAE1CpC,EAAAU,cAAA,iHACAV,EAAAU,cAACH,EAAD,CAAYE,KAAMW,EAAKM,YAAYjB,iCAMnB","file":"component---src-templates-article-tsx-7dc508e17ef6aa8ab299.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport { format } from 'date-fns'\nimport { colors } from '../styles'\nimport { TagButton, FlexContainer } from '../components'\nimport { navigate } from '@reach/router'\n\ninterface ArticleProps {\n  data: {\n    markdownRemark: {\n      html: string,\n      frontmatter: {\n        title: string\n        date: string\n        tags: string[]\n      }\n    }\n  }\n}\n\nconst TagButtons: React.SFC<{ tags: string[] }> = ({ tags }) => (\n  <FlexContainer direction='row'>\n    {tags.map(t => <TagButton onClick={() => navigate(`/tags/${t}`)} active>{t}</TagButton>)}\n  </FlexContainer>\n)\n\nconst Article: React.SFC<ArticleProps> = ({\n  data: { markdownRemark: post }\n}) => (\n    <React.Fragment>\n      <h1 style={{ lineHeight: 1 }}>{post.frontmatter.title}</h1>\n      <h3 style={{ color: colors.lightGreen, marginTop: 0 }}>{format(post.frontmatter.date, 'dddd, MMMM Do YYYY')}</h3>\n      <TagButtons tags={post.frontmatter.tags} />\n      <div\n        style={{\n          marginTop: 64\n        }}\n        dangerouslySetInnerHTML={{ __html: post.html }}\n      />\n      <p>ðŸ¤™ Mahalo for reading! Make sure to check out some related posts by following one of the tags below.</p>\n      <TagButtons tags={post.frontmatter.tags} />\n    </React.Fragment>\n  )\n\nexport default Article\n\nexport const pageQuery = graphql`\n  query ArticleByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        date\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}