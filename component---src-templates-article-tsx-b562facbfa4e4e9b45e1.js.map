{"version":3,"sources":["webpack:///./src/templates/article.tsx"],"names":["React","_interopRequireWildcard","__webpack_require__","_dateFns","_styles","_components","_router","_reactHelmet","TagButtons","_ref","tags","createElement","Fragment","map","t","TagButton","key","onClick","navigate","active","_ref2","post","data","markdownRemark","Helmet","title","frontmatter","style","lineHeight","color","colors","lightGreen","marginTop","format","date","FlexContainer","direction","dangerouslySetInnerHTML","__html","html"],"mappings":"8LAAA,IAAAA,EAAAC,EAAAC,EAAA,IAEAC,EAAAD,EAAA,KACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,IACAI,EAAAJ,EAAA,IACAK,EAAAL,EAAA,KAeMM,EAA4C,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChDV,EAAAW,cAACX,EAAMY,SAAP,KACGF,EAAKG,IAAI,SAAAC,GAAC,OAAId,EAAAW,cAACN,EAAAU,UAAD,CAAWC,IAAKF,EAAGG,QAAS,kBAAM,EAAAX,EAAAY,UAAA,SAAkBJ,IAAMK,QAAM,GAAEL,SAI5C,SAAAM,GAAA,IACfC,EADeD,EACvCE,KAAQC,eAD+B,OAGrCvB,EAAAW,cAACX,EAAMY,SAAP,KACEZ,EAAAW,cAACJ,EAAAiB,OAAD,CAAQC,MAAK,UAAYJ,EAAKK,YAAYD,QAC1CzB,EAAAW,cAAA,MAAIgB,MAAO,CAAEC,WAAY,IAAMP,EAAKK,YAAYD,OAChDzB,EAAAW,cAAA,MAAIgB,MAAO,CAAEE,MAAOC,SAAOC,WAAYC,UAAW,KAAM,EAAA7B,EAAA8B,QAAOZ,EAAKK,YAAYQ,KAAM,uBACtFlC,EAAAW,cAACN,EAAA8B,cAAD,CAAeC,UAAU,OACvBpC,EAAAW,cAACH,EAAD,CAAYE,KAAMW,EAAKK,YAAYhB,QAErCV,EAAAW,cAAA,OACEgB,MAAO,CACLK,UAAW,IAEbK,wBAAyB,CAAEC,OAAQjB,EAAKkB,QAE1CvC,EAAAW,cAAA,+HACAX,EAAAW,cAACN,EAAA8B,cAAD,CAAeC,UAAU,OACvBpC,EAAAW,cAACN,EAAAU,UAAD,CAAWE,QAAS,kBAAM,EAAAX,EAAAY,UAAA,UAAmBC,QAAM,GAAnD,YACAnB,EAAAW,cAACH,EAAD,CAAYE,KAAMW,EAAKK,YAAYhB,kCAOrB","file":"component---src-templates-article-tsx-b562facbfa4e4e9b45e1.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport { format } from 'date-fns'\nimport { colors } from '../styles'\nimport { TagButton, FlexContainer } from '../components'\nimport { navigate } from '@reach/router'\nimport { Helmet } from 'react-helmet'\n\ninterface ArticleProps {\n  data: {\n    markdownRemark: {\n      html: string,\n      frontmatter: {\n        title: string\n        date: string\n        tags: string[]\n      }\n    }\n  }\n}\n\nconst TagButtons: React.SFC<{ tags: string[] }> = ({ tags }) => (\n  <React.Fragment>\n    {tags.map(t => <TagButton key={t} onClick={() => navigate(`/tags/${t}`)} active>{t}</TagButton>)}\n  </React.Fragment>\n)\n\nconst Article: React.SFC<ArticleProps> = ({\n  data: { markdownRemark: post }\n}) => (\n    <React.Fragment>\n      <Helmet title={`Blog | ${post.frontmatter.title}`} />\n      <h1 style={{ lineHeight: 1 }}>{post.frontmatter.title}</h1>\n      <h3 style={{ color: colors.lightGreen, marginTop: 0 }}>{format(post.frontmatter.date, 'dddd, MMMM Do YYYY')}</h3>\n      <FlexContainer direction='row'>\n        <TagButtons tags={post.frontmatter.tags} />\n      </FlexContainer>\n      <div\n        style={{\n          marginTop: 64\n        }}\n        dangerouslySetInnerHTML={{ __html: post.html }}\n      />\n      <p>Thank you for reading my article. Make sure to check out some related articles by following one of the tags below.</p>\n      <FlexContainer direction='row'>\n        <TagButton onClick={() => navigate(`/tags`)} active>{`all tags`}</TagButton>\n        <TagButtons tags={post.frontmatter.tags} />\n      </FlexContainer>\n    </React.Fragment>\n  )\n\nexport default Article\n\nexport const pageQuery = graphql`\n  query ArticleByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        date\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}