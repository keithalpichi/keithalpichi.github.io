{"version":3,"sources":["webpack:///./src/templates/article.tsx"],"names":["TagButtons","tags","className","map","t","length","key","onClick","navigate","Article","post","data","markdownRemark","title","frontmatter","format","Date","date","dangerouslySetInnerHTML","__html","html","pageQuery"],"mappings":"oOAsBMA,EAA0D,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAC9D,uBAAKC,UAAU,QACZD,EAAKE,KAAI,SAAAC,GAAC,OACTA,EAAEC,OACA,gBAAC,IAAD,CAAUC,IAAKF,EAAGG,QAAS,kBAAMC,mBAAS,SAASJ,KAAOA,GAC1D,gBAAC,IAAD,CAAUE,IAAKF,EAAGG,QAAS,kBAAMC,mBAAS,WAA1C,iBAqBOC,UAhBwC,SAAC,GAAD,IAC7BC,EAD6B,EACrDC,KAAQC,eAD6C,OAGnD,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAQC,MAAK,UAAYH,EAAKI,YAAYD,QAC1C,sBAAIX,UAAU,QAAQQ,EAAKI,YAAYD,OACvC,yBAAIE,YAAO,IAAIC,KAAKN,EAAKI,YAAYG,MAAO,wBAC5C,gBAACjB,EAAD,CAAYC,KAAMS,EAAKI,YAAYb,OACnC,uBACEiB,wBAAyB,CAAEC,OAAQT,EAAKU,QAE1C,+IACA,gBAACpB,EAAD,CAAYC,KAAI,CAAG,IAAH,mBAAUS,EAAKI,YAAYb,WAM1C,IAAMoB,EAAY","file":"component---src-templates-article-tsx-1944929b342adaf0355c.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport { format } from 'date-fns'\n// import { colors } from '../styles'\nimport { TagBadge } from '../components/badges'\nimport { navigate } from '@reach/router'\nimport { Helmet } from 'react-helmet'\nimport Main from '../layouts'\n\ninterface ArticleProps {\n  data: {\n    markdownRemark: {\n      html: string,\n      frontmatter: {\n        title: string\n        date: string\n        tags: string[]\n      }\n    }\n  }\n}\n\nconst TagButtons: React.FunctionComponent<{ tags: string[] }> = ({ tags }) => (\n  <div className='tags'>\n    {tags.map(t => (\n      t.length ? \n        <TagBadge key={t} onClick={() => navigate(`/tags/${t}`)}>{t}</TagBadge> :\n        <TagBadge key={t} onClick={() => navigate(`/tags`)}>{`all tags`}</TagBadge>\n    ))}\n  </div>\n)\n\nconst Article: React.FunctionComponent<ArticleProps> = ({\n  data: { markdownRemark: post }\n}) => (\n    <Main>\n      <Helmet title={`Blog | ${post.frontmatter.title}`} />\n      <h1 className='mb-0'>{post.frontmatter.title}</h1>\n      <p>{format(new Date(post.frontmatter.date), 'EEEE, MMMM do, yyyy')}</p>\n      <TagButtons tags={post.frontmatter.tags} />\n      <div\n        dangerouslySetInnerHTML={{ __html: post.html }}\n      />\n      <p>Thank you for reading my article. Make sure to check out some related articles by following one of the tags below.</p>\n      <TagButtons tags={['', ...post.frontmatter.tags]} />\n    </Main>\n  )\n\nexport default Article\n\nexport const pageQuery = graphql`\n  query ArticleByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        date\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}