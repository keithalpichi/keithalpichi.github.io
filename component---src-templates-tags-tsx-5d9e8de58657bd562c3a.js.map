{"version":3,"sources":["webpack:///./src/templates/tags.tsx"],"names":["Tags","_ref","pageContext","data","tag","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","tagHeader","react__WEBPACK_IMPORTED_MODULE_1__","map","_ref2","_node$frontmatter","node","frontmatter","title","path","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","pageQuery"],"mappings":"kKA2CeA,UAxCF,SAAAC,GAeP,IAfUC,EAeVD,EAfUC,YAAaC,EAevBF,EAfuBE,KAgBnBC,EAAQF,EAARE,IADJC,EAE0BF,EAAKG,kBAA3BC,EAFJF,EAEIE,MAAOC,EAFXH,EAEWG,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEIJ,EAFJ,IAIf,OACEM,EAAA,yBACEA,EAAA,wBAAKD,GACLC,EAAA,wBACGH,EAAMI,IAAI,SAAAC,GAAc,IAAAC,EAAAD,EAAXE,KACiBC,YAArBC,EADeH,EACfG,MAAOC,EADQJ,EACRI,KACf,OACEP,EAAA,oBAAIQ,IAAKD,GACPP,EAAA,cAACS,EAAA,KAAD,CAAMC,GAAIH,GAAOD,OAKzBN,EAAA,cAACS,EAAA,KAAD,CAAMC,GAAG,SAAT,cAOC,IAAMC,EAAS","file":"component---src-templates-tags-tsx-5d9e8de58657bd562c3a.js","sourcesContent":["import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nconst Tags = ({ pageContext, data }: {\n  pageContext: { tag: string }\n  data: {\n    allMarkdownRemark: {\n      totalCount: number\n      edges: Array<{\n        node: {\n          frontmatter: {\n            path: string\n            title: string\n          }\n        }\n      }>\n    }\n  }\n}) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n    } tagged with \"${tag}\"`\n\n  return (\n    <div>\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { title, path } = node.frontmatter\n          return (\n            <li key={path}>\n              <Link to={path}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      <Link to='/tags'>All tags</Link>\n    </div>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}