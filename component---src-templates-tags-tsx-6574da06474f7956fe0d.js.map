{"version":3,"sources":["webpack:///./src/templates/tags.tsx"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","style","textAlign","map","node","frontmatter","title","path","key","to","pageQuery"],"mappings":"2FAAA,6EA4CeA,UAxCF,SAAC,GAeR,IAfUC,EAeV,EAfUA,YAAaC,EAevB,EAfuBA,KAgBnBC,EAAQF,EAARE,IADJ,EAE0BD,EAAKE,kBAA3BC,EAFJ,EAEIA,MAAOC,EAFX,EAEWA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEIH,EAFJ,IAIf,OACE,gCACE,sBAAIK,MAAO,CAAEC,UAAW,WAAaF,GACrC,0BACGF,EAAMK,KAAI,YAAc,QAAXC,KACiBC,YAArBC,EADe,EACfA,MAAOC,EADQ,EACRA,KACf,OACE,sBAAIC,IAAKD,GACP,gBAAC,OAAD,CAAME,GAAIF,GAAOD,QAKzB,gBAAC,OAAD,CAAMG,GAAG,SAAT,cAOC,IAAMC,EAAY","file":"component---src-templates-tags-tsx-6574da06474f7956fe0d.js","sourcesContent":["import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\n// import { FlexContainer } from '../components'\n\nconst Tags = ({ pageContext, data }: {\n  pageContext: { tag: string }\n  data: {\n    allMarkdownRemark: {\n      totalCount: number\n      edges: Array<{\n        node: {\n          frontmatter: {\n            path: string\n            title: string\n          }\n        }\n      }>\n    }\n  }\n}) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n    } tagged with \"${tag}\"`\n\n  return (\n    <>\n      <h1 style={{ textAlign: 'center' }}>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { title, path } = node.frontmatter\n          return (\n            <li key={path}>\n              <Link to={path}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      <Link to='/tags'>All tags</Link>\n    </>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}